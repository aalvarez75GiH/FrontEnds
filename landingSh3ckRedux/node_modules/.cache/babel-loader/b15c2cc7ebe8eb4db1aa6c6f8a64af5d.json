{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js\";\nimport React, { useState } from 'react';\nimport InterestedUsersForm from '../contactSection/interestedUserForm';\nimport LoginForm from './loginForm';\nimport axios from 'axios';\nimport FormHeader from './formHeader';\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData';\nimport { infoContact } from '../../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactSectionTest = ({\n  language,\n  loggedIn,\n  handlingSubmitLoginUser,\n  // loginResponse,\n  // toggleNotificationLogin,\n  isSignedIn,\n  googleTest,\n  active,\n  regView,\n  forgotPIN,\n  toggleRegView,\n  settinRegViewAndForgotPINToFalse,\n  toggleForgotPINState,\n  contactSectionOpen,\n  workingSpinner,\n  handlingClosingOfContactSection,\n  handlingContactSectionResponse\n}) => {\n  // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n  // const url_users = \"http://192.168.1.102:5000/api/users\"\n  const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\";\n  const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\";\n  const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\";\n\n  const handlingSubmitInterestedUser = interestedUser => {\n    workingSpinner('activate');\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_interestedUsersInTheCloud, interestedUser);\n        console.log(response);\n\n        if (response.status === 201) {\n          handlingContactSectionResponse(response);\n          workingSpinner('close');\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error.response);\n        workingSpinner('close');\n        handlingContactSectionResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingSubmitUser = async user => {\n    workingSpinner('activate');\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_usersInTheCloud, user);\n        console.log(response);\n\n        if (response.status === 201) {\n          handlingContactSectionResponse(response);\n          workingSpinner('close');\n          settinRegViewAndForgotPINToFalse();\n          console.log('Gracias por registrarte');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error);\n        workingSpinner('close');\n        handlingContactSectionResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingNewPINRequest = async dataToRequest => {\n    // console.log(dataToRequest)\n    workingSpinner('activate');\n\n    try {\n      const response = await axios.put(url_generatePIN_ITC, dataToRequest);\n      console.log(response.status);\n\n      if (response.status === 200) {\n        console.log(response);\n        handlingContactSectionResponse(response);\n        workingSpinner('close');\n        return response.status;\n      }\n    } catch (error) {\n      console.log(error);\n      workingSpinner('close');\n      handlingContactSectionResponse(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: infoContact.id,\n    className: contactSectionOpen ? 'contactContainer_open' : 'contactContainer',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForms\",\n        children: [!loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHeader, {\n            active: active,\n            loggedIn: loggedIn,\n            regView: regView,\n            forgotPIN: forgotPIN,\n            language: language,\n            handlingClosingOfContactSection: handlingClosingOfContactSection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : null, active === 'interested' && !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 14\n          }, this)\n        }, void 0, false) : null, active === 'check' && !loggedIn ? /*#__PURE__*/_jsxDEV(LoginForm, {\n          regView: regView,\n          forgotPIN: forgotPIN,\n          toggleRegView: toggleRegView,\n          toggleForgotPINState: toggleForgotPINState,\n          handlingSubmitUser: handlingSubmitUser,\n          handlingSubmitLoginUser: handlingSubmitLoginUser,\n          handlingNewPINRequest: handlingNewPINRequest,\n          language: language,\n          isSignedIn: isSignedIn,\n          googleTest: googleTest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactSectionTest;\nexport default ContactSectionTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactSectionTest\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js"],"names":["React","useState","InterestedUsersForm","LoginForm","axios","FormHeader","responseDataInterested","responseDataRegister","responseDataLogin","responseDataNewPIN","infoContact","ContactSectionTest","language","loggedIn","handlingSubmitLoginUser","isSignedIn","googleTest","active","regView","forgotPIN","toggleRegView","settinRegViewAndForgotPINToFalse","toggleForgotPINState","contactSectionOpen","workingSpinner","handlingClosingOfContactSection","handlingContactSectionResponse","url_interestedUsersInTheCloud","url_usersInTheCloud","url_generatePIN_ITC","handlingSubmitInterestedUser","interestedUser","setTimeout","response","post","console","log","status","error","handlingSubmitUser","user","handlingNewPINRequest","dataToRequest","put","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport LoginForm from './loginForm'\nimport axios from 'axios'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSectionTest = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    // loginResponse,\n    // toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active,\n    regView,\n    forgotPIN,\n    toggleRegView,\n    settinRegViewAndForgotPINToFalse,\n    toggleForgotPINState,\n    contactSectionOpen,\n    workingSpinner,\n    handlingClosingOfContactSection,\n    handlingContactSectionResponse\n\n}) => {\n   \n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    \n\n    \n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        workingSpinner('activate')\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        handlingContactSectionResponse(response)\n                        workingSpinner('close')\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                workingSpinner('close')\n                handlingContactSectionResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        workingSpinner('activate')\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                handlingContactSectionResponse(response)\n                workingSpinner('close')\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            workingSpinner('close')\n            handlingContactSectionResponse(error.response)\n        }\n    }\n\n\n\nreturn (\n    <div \n    id={infoContact.id}\n    className={contactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        <div className={contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n            <div className=\"contactForms\">\n             \n             {/* {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n             language={language}\n             />\n             : null\n             } */}\n            \n            { !loggedIn  ? \n            <>\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            handlingClosingOfContactSection={handlingClosingOfContactSection}\n            />\n            </>\n            :\n            null\n            }\n                  \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            toggleForgotPINState={toggleForgotPINState}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingSubmitLoginUser={handlingSubmitLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSectionTest\n"]},"metadata":{},"sourceType":"module"}