{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerFormTest.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { infoContact } from '../../utils/data';\nimport GoogleAuthButtons from '../buttons/googleAuthButtons'; // const PASSWORD_REGEX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n// const validationSchema = yup.object({\n//     fullName: yup.string().min(3).max(100).required('Debes colocar tu nombre completo'),\n//     password: yup.string().min(6).max(200).matches(PASSWORD_REGEX, \"Por favor coloca un password más fuerte\").required(),\n//     email: yup.string().email('Por favor introduce una dirección de email válida').required(),\n//     phoneNumber: yup.string().length(11).pattern(/^[0-9]+$/).required()\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n  // password: yup.string().min(6).max(200).required('No te olvides de colocar tu clave'),\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n  phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n});\n\nconst RegisterFormTest = ({\n  handlingSubmitUser,\n  language,\n  handleGoogleLogin,\n  handleGoogleLogout,\n  handleGoogleFailure,\n  showloginButton,\n  showlogoutButton\n}) => {\n  _s();\n\n  const onSubmit = values => {\n    handlingSubmitUser(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      // password: \"\",\n      email: \"\",\n      phoneNumber: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"fullName\",\n        placeholder: language === 'ES' ? infoContact.regUsersFormPH1 : infoContact.regUsersFormPH1_EN,\n        autoComplete: \"on\",\n        type: \"text\",\n        value: formik.values.fullName,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"email\",\n        placeholder: language === 'ES' ? infoContact.regUsersFormPH2 : infoContact.regUsersFormPH2_EN,\n        type: \"text\",\n        autoComplete: \"on\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"phoneNumber\",\n        placeholder: language === 'ES' ? infoContact.regUsersFormPH3 : infoContact.regUsersFormPH3_EN,\n        type: \"text\",\n        autoComplete: \"on\",\n        value: formik.values.phoneNumber,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sendDataBtn\",\n        type: \"submit\",\n        children: language === 'ES' ? infoContact.regUsersFormSendBtn : infoContact.regUsersFormSendBtn_EN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"g-signin\",\n        children: /*#__PURE__*/_jsxDEV(GoogleAuthButtons, {\n          handleGoogleLogin: handleGoogleLogin,\n          handleGoogleLogout: handleGoogleLogout,\n          handleGoogleFailure: handleGoogleFailure,\n          showloginButton: showloginButton,\n          showlogoutButton: showlogoutButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterFormTest, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = RegisterFormTest;\nexport default RegisterFormTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterFormTest\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/registerFormTest.js"],"names":["React","useFormik","yup","infoContact","GoogleAuthButtons","validationSchema","object","fullName","string","min","max","required","email","phoneNumber","length","RegisterFormTest","handlingSubmitUser","language","handleGoogleLogin","handleGoogleLogout","handleGoogleFailure","showloginButton","showlogoutButton","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","regUsersFormPH1","regUsersFormPH1_EN","handleChange","handleBlur","borderBottom","touched","regUsersFormPH2","regUsersFormPH2_EN","regUsersFormPH3","regUsersFormPH3_EN","regUsersFormSendBtn","regUsersFormSendBtn_EN"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport { infoContact } from '../../utils/data'\nimport GoogleAuthButtons from '../buttons/googleAuthButtons'\n\n\n// const PASSWORD_REGEX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n\n// const validationSchema = yup.object({\n//     fullName: yup.string().min(3).max(100).required('Debes colocar tu nombre completo'),\n//     password: yup.string().min(6).max(200).matches(PASSWORD_REGEX, \"Por favor coloca un password más fuerte\").required(),\n//     email: yup.string().email('Por favor introduce una dirección de email válida').required(),\n//     phoneNumber: yup.string().length(11).pattern(/^[0-9]+$/).required()\n       \n// })\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    // password: yup.string().min(6).max(200).required('No te olvides de colocar tu clave'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n})\n\n\nconst RegisterFormTest = ({ \n    handlingSubmitUser, \n    language,\n    handleGoogleLogin,\n    handleGoogleLogout,\n    handleGoogleFailure,\n    showloginButton,\n    showlogoutButton \n\n}) => {\n\n    const onSubmit = (values) => {\n        handlingSubmitUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            // password: \"\",\n            email: \"\",\n            phoneNumber: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH1 : infoContact.regUsersFormPH1_EN} \n                autoComplete=\"on\"\n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH2 : infoContact.regUsersFormPH2_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"phoneNumber\"\n                placeholder={language === 'ES' ? infoContact.regUsersFormPH3 : infoContact.regUsersFormPH3_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.phoneNumber}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.regUsersFormSendBtn : infoContact.regUsersFormSendBtn_EN}</button>\n            \n                <div className=\"g-signin\">\n                    <GoogleAuthButtons\n                    handleGoogleLogin={handleGoogleLogin}\n                    handleGoogleLogout={handleGoogleLogout}\n                    handleGoogleFailure={handleGoogleFailure}\n                    showloginButton={showloginButton}\n                    showlogoutButton={showlogoutButton}\n                    />\n                </div>\n            \n            </form>\n\n        </div>\n    )\n}\n\nexport default RegisterFormTest"]},"metadata":{},"sourceType":"module"}