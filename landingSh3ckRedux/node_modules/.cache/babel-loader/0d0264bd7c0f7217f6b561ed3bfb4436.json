{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport RegisterForm from './registerForm';\nimport { FaEye } from 'react-icons/fa';\nimport ForgotPINSection from './forgotPINSection';\nimport { MdOutlineVisibility } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n  pin: yup.string().min(4).max(4).required('No te olvides de colocar tu PIN de seguridad')\n});\n\nconst LoginForm = ({\n  handlingLoginUser,\n  regView,\n  toggleRegView,\n  handlingSubmitUser,\n  forgotPIN,\n  toggleForgotSection\n}) => {\n  _s();\n\n  const [typeOfPIN, setTypeOfPIN] = useState(false);\n\n  const onSubmit = async values => {\n    handlingLoginUser(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      pin: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  console.log(formik.errors);\n\n  const togglingPINVisibility = () => {\n    setTypeOfPIN(!typeOfPIN);\n  };\n\n  if (regView) {\n    return /*#__PURE__*/_jsxDEV(RegisterForm, {\n      handlingSubmitUser: handlingSubmitUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (forgotPIN) {\n    return /*#__PURE__*/_jsxDEV(ForgotPINSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        autoComplete: \"on\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        type: \"email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputPassword\",\n          name: \"pin\",\n          autoComplete: \"on\",\n          placeholder: \"#PIN (solo 4 d\\xEDgitos)\",\n          type: !typeOfPIN ? 'password' : 'text',\n          value: formik.values.pin,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eyeWrapper\",\n          children: /*#__PURE__*/_jsxDEV(MdOutlineVisibility, {\n            onClick: togglingPINVisibility,\n            className: \"eyeIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleRegView,\n        className: \"regButton\",\n        type: \"submit\",\n        children: \"Reg\\xEDstrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleForgotSection,\n        className: \"forgotPINSpan\",\n        children: \"Se me olvid\\xF3 mi n\\xFAmero PIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"tkEf1euVfGWyWRG5Cr1yJHn+ox8=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/loginForm.js"],"names":["React","useState","useFormik","yup","RegisterForm","FaEye","ForgotPINSection","MdOutlineVisibility","validationSchema","object","email","string","required","pin","min","max","LoginForm","handlingLoginUser","regView","toggleRegView","handlingSubmitUser","forgotPIN","toggleForgotSection","typeOfPIN","setTypeOfPIN","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","togglingPINVisibility","handleSubmit","handleChange","handleBlur","borderBottom","touched","city"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport RegisterForm from './registerForm'\nimport { FaEye } from 'react-icons/fa'\nimport ForgotPINSection from './forgotPINSection'\nimport {MdOutlineVisibility} from 'react-icons/md'\n\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('hola, no te olvídes de colocar tu correo electrónico'),\n    pin: yup.string().min(4).max(4).required('No te olvides de colocar tu PIN de seguridad'),   \n})\n\n\nconst LoginForm = ({ \n    handlingLoginUser,\n    regView, \n    toggleRegView,\n    handlingSubmitUser,\n    forgotPIN,\n    toggleForgotSection,\n}) => {\n\n    const [typeOfPIN, setTypeOfPIN ] = useState(false)\n    \n    const onSubmit = async(values) => {\n        handlingLoginUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            pin: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    console.log(formik.errors)\n\n    const togglingPINVisibility = () => {\n        setTypeOfPIN(!typeOfPIN)\n    }\n\n    if (regView){\n        return(\n            <RegisterForm \n            handlingSubmitUser={handlingSubmitUser}\n            />\n        )\n    }\n\n    if (forgotPIN){\n        return <ForgotPINSection/>\n    }\n\n\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                \n                <input\n                className=\"input\"\n                autoComplete=\"on\"\n                name=\"email\"\n                placeholder=\"Correo electrónico\" \n                type=\"email\" \n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <div className=\"inputWrapper\">\n                <input\n                className=\"inputPassword\"\n                name=\"pin\"\n                autoComplete=\"on\"\n                placeholder=\"#PIN (solo 4 dígitos)\" \n                type={!typeOfPIN ? 'password' : 'text'} \n                value={formik.values.pin}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.city && formik.errors.city ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                    <div className=\"eyeWrapper\">\n                        <MdOutlineVisibility\n                        onClick={togglingPINVisibility}\n                        className=\"eyeIcon\"\n                        />\n                    </div>\n                \n                </div>\n                \n                \n                <button\n                type=\"submit\"\n                >Enviar</button>\n                <button\n                onClick={toggleRegView}\n                className=\"regButton\"\n                type=\"submit\"\n                >Regístrate</button>\n                <span\n                onClick={toggleForgotSection} \n                className=\"forgotPINSpan\">Se me olvidó mi número PIN</span>\n            </form>\n\n        </div>\n    )\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}