{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport InterestedUsersForm from '../contactSection/interestedUserForm';\nimport CheckSection from './checkSection';\nimport LoadingSpinner from '../../utils/loadingSpinner';\nimport OptionsForms from './optionsForms';\nimport LoginForm from './loginForm'; // import LoginFormTest from './loginFormTest'\n\nimport NotificationBox from '../notifications/NotificationBox';\nimport axios from 'axios';\nimport picture from \"../../images/2034873_chat_app_media_mobile_social_icon.svg\";\nimport FormHeader from './formHeader';\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData';\nimport { infoContact } from '../../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactSectionTest = ({\n  language,\n  loggedIn,\n  handlingSubmitLoginUser,\n  loginResponse,\n  toggleNotificationLogin,\n  isSignedIn,\n  googleTest,\n  active\n}) => {\n  _s();\n\n  const [upLoadingUser, setUpLoadingUser] = useState(false); // const [ active , setActive ] = useState('interested') \n  // const [ regView, setRegView ] = useState(false)\n\n  const [response, setResponse] = useState(null);\n  const [forgotPIN, setForgotPIN] = useState(false); // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n  // const url_users = \"http://192.168.1.102:5000/api/users\"\n\n  const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\";\n  const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\";\n  const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"; // console.log(loginResponse)\n  //    console.log(isSignedIn)\n  // const switchToCheck = () => {\n  //     setActive('check')\n  //     setRegView(false)\n  //     setForgotPIN(false)\n  // }\n  // const switchToSignIn = () => {\n  //     // setActive('interested')\n  // }\n\n  const toggleRegView = () => {\n    setResponse(null); // setRegView(true)\n  };\n\n  const toggleNotification = () => {\n    setResponse(null); // setRegView(false)\n\n    setForgotPIN(!forgotPIN);\n  };\n\n  const toggleForgotSection = () => {\n    setForgotPIN(!forgotPIN);\n  };\n\n  const handlingLoginUser = values => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      handlingSubmitLoginUser(values);\n      setUpLoadingUser(false);\n    }, 2000);\n  };\n\n  const handlingSubmitInterestedUser = interestedUser => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_interestedUsersInTheCloud, interestedUser);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false);\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error.response);\n        setUpLoadingUser(false);\n        setResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingSubmitUser = async user => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_usersInTheCloud, user);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false); // setRegView(false)\n\n          console.log('Gracias por registrarte');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error);\n        setUpLoadingUser(false);\n        setResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingNewPINRequest = async dataToRequest => {\n    // console.log(dataToRequest)\n    setUpLoadingUser(true);\n\n    try {\n      const response = await axios.put(url_generatePIN_ITC, dataToRequest);\n      console.log(response.status);\n\n      if (response.status === 200) {\n        console.log(response);\n        setResponse(response);\n        setUpLoadingUser(false);\n        return response.status;\n      }\n    } catch (error) {\n      console.log(error);\n      setUpLoadingUser(false);\n      setResponse(response.error);\n    }\n  };\n\n  const togglingResponseData = () => {\n    if (response && active === 'interested') {\n      return responseDataInterested;\n    }\n\n    if (response && forgotPIN) {\n      return responseDataNewPIN;\n    }\n\n    if (response && active === 'check') {\n      return responseDataRegister;\n    }\n\n    if (loginResponse && active === 'check') {\n      return responseDataLogin;\n    }\n  };\n\n  if (upLoadingUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: infoContact.id,\n      className: \"contactContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"contactInfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contactForms\",\n          children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(OptionsForms, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), active === 'interested' && loggedIn ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 61\n          }, this) : null, active === 'interested' && loggedIn === false ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 71\n          }, this) : null, active === 'check' && loggedIn ? /*#__PURE__*/_jsxDEV(InterestedUsersForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 57\n          }, this) : null, active === 'check' && loggedIn === false ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 67\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this);\n  } // console.log(active)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: infoContact.id,\n    className: \"contactContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForms\",\n        children: [response || loginResponse ? /*#__PURE__*/_jsxDEV(NotificationBox, {\n          toggleNotification: response ? toggleNotification : toggleNotificationLogin,\n          response: response ? response : loginResponse,\n          responseData: togglingResponseData() //  switchToCheck={switchToCheck}\n          ,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : null, !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHeader, {\n            active: active,\n            loggedIn: loggedIn // regView={regView}\n            ,\n            forgotPIN: forgotPIN,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : null, loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CheckSection, {\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 14\n          }, this)\n        }, void 0, false) : null, active === 'interested' && !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 14\n          }, this)\n        }, void 0, false) : null, active === 'check' && !loggedIn ? /*#__PURE__*/_jsxDEV(LoginForm // regView={regView}\n        , {\n          forgotPIN: forgotPIN,\n          toggleRegView: toggleRegView,\n          handlingSubmitUser: handlingSubmitUser,\n          handlingLoginUser: handlingLoginUser,\n          handlingNewPINRequest: handlingNewPINRequest,\n          toggleForgotSection: toggleForgotSection,\n          language: language,\n          isSignedIn: isSignedIn,\n          googleTest: googleTest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactSectionTest, \"YR+a38ubgKPLVQS9k3nJEHzfExE=\");\n\n_c = ContactSectionTest;\nexport default ContactSectionTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactSectionTest\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSectionTest.js"],"names":["React","useState","motion","InterestedUsersForm","CheckSection","LoadingSpinner","OptionsForms","LoginForm","NotificationBox","axios","FormHeader","responseDataInterested","responseDataRegister","responseDataLogin","responseDataNewPIN","infoContact","ContactSectionTest","language","loggedIn","handlingSubmitLoginUser","loginResponse","toggleNotificationLogin","isSignedIn","googleTest","active","upLoadingUser","setUpLoadingUser","response","setResponse","forgotPIN","setForgotPIN","url_interestedUsersInTheCloud","url_usersInTheCloud","url_generatePIN_ITC","toggleRegView","toggleNotification","toggleForgotSection","handlingLoginUser","values","setTimeout","handlingSubmitInterestedUser","interestedUser","post","console","log","status","error","handlingSubmitUser","user","handlingNewPINRequest","dataToRequest","put","togglingResponseData","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport  { motion } from 'framer-motion'\n\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport CheckSection from './checkSection'\nimport LoadingSpinner from '../../utils/loadingSpinner' \nimport OptionsForms from './optionsForms'\nimport LoginForm from './loginForm'\n// import LoginFormTest from './loginFormTest'\nimport NotificationBox from '../notifications/NotificationBox'\nimport axios from 'axios'\nimport picture from '../../images/2034873_chat_app_media_mobile_social_icon.svg'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSectionTest = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    loginResponse,\n    toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active\n\n}) => {\n   \n    const [ upLoadingUser, setUpLoadingUser ] = useState(false)\n    // const [ active , setActive ] = useState('interested') \n    // const [ regView, setRegView ] = useState(false)\n    const [response, setResponse ] = useState(null)\n    const [ forgotPIN, setForgotPIN ] = useState(false)\n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    // console.log(loginResponse)\n//    console.log(isSignedIn)\n\n    // const switchToCheck = () => {\n    //     setActive('check')\n    //     setRegView(false)\n    //     setForgotPIN(false)\n    // }\n\n    // const switchToSignIn = () => {\n    //     // setActive('interested')\n    // }\n\n\n    const toggleRegView = () => {\n        setResponse(null)\n        // setRegView(true)\n    }\n\n    const toggleNotification = () => {\n        setResponse(null)\n        // setRegView(false)\n        setForgotPIN(!forgotPIN)\n    }\n\n    const toggleForgotSection = () => {\n        setForgotPIN(!forgotPIN)\n    }\n\n\n\n    const handlingLoginUser = (values) => {\n        setUpLoadingUser(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(values)\n            setUpLoadingUser(false)\n        },2000)\n    } \n\n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        // setRegView(false)\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        setUpLoadingUser(true)\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                setResponse(response)\n                setUpLoadingUser(false)\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            setUpLoadingUser(false)\n            setResponse(response.error)\n        }\n    }\n\nconst togglingResponseData = () => {\n    if (response && active === 'interested'){\n        return responseDataInterested\n    }\n    if (response && forgotPIN){\n        return responseDataNewPIN\n    }\n    if (response && active === 'check'){\n        return responseDataRegister\n    }\n    if (loginResponse && active === 'check'){\n        return responseDataLogin\n    } \n}\n\nif (upLoadingUser){\n    return (\n        <div \n        id={infoContact.id}\n        className=\"contactContainer\">\n            <div className=\"contactWrapper\">\n                <motion.div className=\"contactInfo\"></motion.div>\n                <div className=\"contactForms\">\n                    <LoadingSpinner language={language}/>\n                    <OptionsForms/>\n                    <FormHeader/>\n                    { active === 'interested' && loggedIn ? <InterestedUsersForm/>:null}\n                    { active === 'interested' && loggedIn === false ? <InterestedUsersForm/>:null}\n                    { active === 'check' && loggedIn  ? <InterestedUsersForm/>:null}\n                    { active === 'check' && loggedIn === false  ? <LoginForm/>:null}\n                </div>\n            </div>\n        </div>\n    )    \n}\n// console.log(active)\nreturn (\n    <div \n    id={infoContact.id}\n    className=\"contactContainer\">\n        <div className=\"contactWrapper\">\n            <div className=\"contactForms\">\n             \n             {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n            //  switchToCheck={switchToCheck}\n             language={language}\n             />\n             : null\n             }\n            \n            { !loggedIn  ? \n            <>\n            {/* <OptionsForms\n            active={active === 'interested' ? 'interested' : 'signUp' } \n            switchToSignIn={switchToSignIn}\n            switchToCheck={switchToCheck}\n            language={language}\n            /> */}\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            // regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            />\n            </>\n            :\n            null\n            }\n            \n            { loggedIn ? \n             <>\n             <CheckSection language={language}/>\n             </>\n             \n             :\n             null\n            }\n            \n                \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            // regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingLoginUser={handlingLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            toggleForgotSection={toggleForgotSection}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSectionTest\n"]},"metadata":{},"sourceType":"module"}