{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { infoContact } from '../../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n  phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n});\n\nconst ForgotPINForm = ({\n  handlingNewPINRequest,\n  toggleForgotPINState,\n  language\n}) => {\n  _s();\n\n  const onSubmit = values => {\n    handlingNewPINRequest(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      phoneNumber: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"email\",\n        placeholder: language === 'ES' ? infoContact.forgotPINFormPH1 : infoContact.forgotPINFormPH1_EN,\n        type: \"text\",\n        autoComplete: \"on\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        name: \"phoneNumber\",\n        placeholder: language === 'ES' ? infoContact.forgotPINFormPH2 : infoContact.forgotPINFormPH2_EN,\n        type: \"text\",\n        autoComplete: \"on\",\n        value: formik.values.phoneNumber,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        style: {\n          borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sendDataBtn\",\n        type: \"submit\",\n        children: language === 'ES' ? infoContact.forgotPINFormSendBtn : infoContact.forgotPINFormSendBtn_EN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForgotPINState,\n        className: \"comeBackBtn\",\n        type: \"submit\",\n        children: language === 'ES' ? infoContact.forgotPINFormBackBtn : infoContact.forgotPINFormBackBtn_EN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPINForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ForgotPINForm;\nexport default ForgotPINForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPINForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/forgotPINForm.js"],"names":["React","useFormik","yup","infoContact","validationSchema","object","email","string","required","phoneNumber","length","ForgotPINForm","handlingNewPINRequest","toggleForgotPINState","language","onSubmit","values","formik","initialValues","validateOnBlur","console","log","errors","handleSubmit","forgotPINFormPH1","forgotPINFormPH1_EN","handleChange","handleBlur","borderBottom","touched","forgotPINFormPH2","forgotPINFormPH2_EN","forgotPINFormSendBtn","forgotPINFormSendBtn_EN","forgotPINFormBackBtn","forgotPINFormBackBtn_EN"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup' \nimport { infoContact } from '../../utils/data'\n\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),\n    phoneNumber: yup.string().length(11).required('No te olvides de colocar tu número de teléfono')\n})\n\n\nconst ForgotPINForm = ({ \n    handlingNewPINRequest, \n    toggleForgotPINState,\n    language \n}) => {\n\n    const onSubmit = (values) => {\n        handlingNewPINRequest(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            phoneNumber: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n\n    return (\n        <div className=\"boxContainer\">\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.forgotPINFormPH1 : infoContact.forgotPINFormPH1_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"phoneNumber\"\n                placeholder={language === 'ES' ? infoContact.forgotPINFormPH2 : infoContact.forgotPINFormPH2_EN} \n                type=\"text\" \n                autoComplete=\"on\"\n                value={formik.values.phoneNumber}\n                onChange={formik.handleChange}                \n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.phoneNumber && formik.errors.phoneNumber ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.forgotPINFormSendBtn : infoContact.forgotPINFormSendBtn_EN}</button>\n                <button\n                onClick={toggleForgotPINState}\n                className=\"comeBackBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.forgotPINFormBackBtn : infoContact.forgotPINFormBackBtn_EN}</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default ForgotPINForm"]},"metadata":{},"sourceType":"module"}