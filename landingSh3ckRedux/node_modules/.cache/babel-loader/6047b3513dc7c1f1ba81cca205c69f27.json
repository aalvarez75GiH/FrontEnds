{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js\";\nimport React from 'react';\nimport successImage from \"../../images/ok_success_icon.svg\";\nimport foundImage from \"../../images/ok_success_verified_icon.svg\";\nimport { FaTimes } from 'react-icons/fa';\nimport { regularCopy } from './notificationData';\nimport { Link as LinkS } from 'react-scroll';\nimport { OffsetHandler } from '../../utils/settingOffsets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationBox = ({\n  response,\n  responseData,\n  toggleNotification,\n  language\n}) => {\n  console.log(response);\n  let responseSplitted = response.data.split(' '); // console.log('splitting response: ', responseSplitted[0])\n\n  if (response) {\n    if (response.status === 400) {\n      return (\n        /*#__PURE__*/\n        // <div className=\"notificationContainer\">\n        _jsxDEV(\"div\", {\n          className: response ? 'notificationContainer_open' : 'notificationContainer',\n          children: [/*#__PURE__*/_jsxDEV(LinkS, {\n            onClick: toggleNotification,\n            to: \"nextStepSection\",\n            activeClass: \"active\",\n            spy: true,\n            smooth: true,\n            offset: OffsetHandler('checkAProduct'),\n            duration: 500,\n            className: \"closeIconContainer\",\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: foundImage,\n              alt: \"successImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationName\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notificationSpan\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [language === 'ES' ? regularCopy.hola : regularCopy.hello, \" \", '', responseSplitted[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationResponse\",\n              children: language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(LinkS, {\n              className: \"notificationBtn\",\n              onClick: toggleNotification,\n              to: \"nextStepSection\",\n              activeClass: \"active\",\n              spy: true,\n              smooth: true,\n              offset: OffsetHandler('checkAProduct'),\n              duration: 500,\n              children: language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      );\n    }\n\n    if (response.status === 409) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: response ? 'notificationContainer_open' : 'notificationContainer',\n        children: [/*#__PURE__*/_jsxDEV(LinkS, {\n          onClick: toggleNotification,\n          to: \"nextStepSection\",\n          activeClass: \"active\",\n          spy: true,\n          smooth: true,\n          offset: OffsetHandler('checkAProduct'),\n          duration: 500,\n          className: \"closeIconContainer\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notificationWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: foundImage,\n            alt: \"successImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationName\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notificationSpan\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [language === 'ES' ? regularCopy.hola : regularCopy.hello, \" \", '', responseSplitted[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationResponse\",\n            children: language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LinkS, {\n            to: \"nextStepSection\",\n            activeClass: \"active\",\n            spy: true,\n            smooth: true,\n            offset: OffsetHandler('checkAProduct'),\n            duration: 500,\n            className: \"notificationBtn\",\n            onClick: toggleNotification,\n            children: language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (response.status === 201) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: response ? 'notificationContainer_open' : 'notificationContainer',\n        children: [/*#__PURE__*/_jsxDEV(LinkS, {\n          to: \"nextStepSection\",\n          activeClass: \"active\",\n          spy: true,\n          smooth: true,\n          offset: -5000,\n          duration: 500,\n          onClick: toggleNotification,\n          className: \"closeIconContainer\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notificationWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: successImage,\n            alt: \"successImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationName\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notificationSpan\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [language === 'ES' ? regularCopy.hola : regularCopy.hello, \" \", '', responseSplitted[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationResponse\",\n            children: language === 'ES' ? responseData.successMessage : responseData.successMessage_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notificationBtn\",\n            onClick: toggleNotification,\n            children: language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (response.status === 200) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: response ? 'notificationContainer_open' : 'notificationContainer',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: toggleNotification,\n          className: \"closeIconContainer\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notificationWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: successImage,\n            alt: \"successImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationName\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notificationSpan\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [language === 'ES' ? regularCopy.hola : regularCopy.hello, \" \", '', responseSplitted[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notificationResponse\",\n            children: language === 'ES' ? responseData.successMessage : responseData.successMessage_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notificationBtn\",\n            onClick: toggleNotification,\n            children: language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (response.status === 500) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: language === 'Es' ? regularCopy.error500Copy : regularCopy.continueBtnCopy_EN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return null;\n};\n\n_c = NotificationBox;\nexport default NotificationBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationBox\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/notifications/NotificationBox.js"],"names":["React","FaTimes","regularCopy","Link","LinkS","OffsetHandler","NotificationBox","response","responseData","toggleNotification","language","console","log","responseSplitted","data","split","status","foundImage","hola","hello","errorMessage","errorMessage_EN","continueBtnCopy","continueBtnCopy_EN","successImage","successMessage","successMessage_EN","error500Copy"],"mappings":"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","sourcesContent":["import React from 'react'\nimport successImage from '../../images/ok_success_icon.svg'\nimport foundImage from '../../images/ok_success_verified_icon.svg'\nimport { FaTimes } from 'react-icons/fa'\nimport { regularCopy } from './notificationData'\nimport { Link as LinkS } from 'react-scroll'\nimport { OffsetHandler } from '../../utils/settingOffsets'\n\n\nconst NotificationBox = ({ \n    response, \n    responseData, \n    toggleNotification,\n    language,\n}) => {\n    console.log(response)\n    let responseSplitted = response.data.split(' ')\n    // console.log('splitting response: ', responseSplitted[0])\n    if (response){\n        if (response.status === 400){\n            return (\n            // <div className=\"notificationContainer\">\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={toggleNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500} \n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    \n                    <LinkS \n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>     \n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 409){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS \n                onClick={toggleNotification}\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={OffsetHandler('checkAProduct')}\n                duration={500}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={foundImage} alt=\"successImage\" />\n                    <div className=\"notificationName\"> \n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.errorMessage : responseData.errorMessage_EN}\n                    </div>\n                    <LinkS\n                    to=\"nextStepSection\"  \n                    activeClass=\"active\"\n                    spy={true}\n                    smooth={true}\n                    offset={OffsetHandler('checkAProduct')}\n                    duration={500} \n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</LinkS>\n                </div>\n            </div>   \n            )\n        }\n        if (response.status === 201){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <LinkS\n                to=\"nextStepSection\"  \n                activeClass=\"active\"\n                spy={true}\n                smooth={true}\n                offset={-5000}\n                duration={500} \n                onClick={toggleNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </LinkS>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                    {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <button\n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</button>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 200){\n            return (\n            <div className={response ? 'notificationContainer_open' : 'notificationContainer'}>\n                <div \n                onClick={toggleNotification}\n                className=\"closeIconContainer\">\n                    <FaTimes/>\n                </div>\n                <div className=\"notificationWrapper\">\n                    <img src={successImage} alt=\"successImage\" />\n                    <div className=\"notificationName\">\n                        <span className=\"notificationSpan\">\n                            <b>{language === 'ES' ? regularCopy.hola : regularCopy.hello} {''}{responseSplitted[0]}</b>    \n                        </span>    \n                    </div>\n                    <div className=\"notificationResponse\">\n                        {language === 'ES' ? responseData.successMessage : responseData.successMessage_EN }\n                    </div>\n                    <button\n                    className=\"notificationBtn\"\n                    onClick={toggleNotification}\n                    >{language === 'Es' ? regularCopy.continueBtnCopy : regularCopy.continueBtnCopy_EN}</button>\n                </div>\n                \n            </div>\n            )\n        }\n        if (response.status === 500) {\n            return (\n                <div>\n                    <b>{language === 'Es' ? regularCopy.error500Copy : regularCopy.continueBtnCopy_EN}</b>\n                </div>\n            )\n        }\n    }\n    return null     \n   \n}\n\nexport default NotificationBox\n"]},"metadata":{},"sourceType":"module"}