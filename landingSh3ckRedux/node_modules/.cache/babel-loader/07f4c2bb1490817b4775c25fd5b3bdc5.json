{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar';\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'; // import MainSideBar from '../components/mainSideBar/mainSideBar'\n\nimport MainSideBarTest from '../components/mainSideBar/mainSideBarTest'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection'; // import { infoHero, infoVideo, infoHIW, infoContact  } from '../utils/data'\n\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil'; // import ContactSection from '../components/contactSection/contactSection'\n\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'; // import StyledFooterSection from '../components/footerSection/styledFooterSection'\n\nimport FooterSection from '../components/footerSection/footerSection';\nimport LoadingSpinner from '../utils/loadingSpinner'; // f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeTest2 = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loggedOut, setLoggedOut] = useState(true);\n  const [currentUser, setCurrentUser] = useState('');\n  const [loginSideBarOpen, setLoginSideBarOpen] = useState(false);\n  const [mainSideBarOpen, setMainSideBarOpen] = useState(false);\n  const [loginResponse, setLoginResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [language, setLanguage] = useState('ES'); // Google OAuth States *****************************************\n\n  const [googleUser, setGoogleUser] = useState({\n    fullName: '',\n    email: '',\n    id: '',\n    imageUrl: '',\n    token_id: ''\n  });\n  const [loginData, setLoginData] = useState(null);\n  const [isSignedIn, setIsSignedIn] = useState(null); // console.log(isSignedIn)\n  // **************************************************************\n\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection(); // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n\n  const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\";\n  let auth;\n  useEffect(() => {\n    gettingTokenForLocalSignIn();\n\n    window.onload = function () {\n      window.google.accounts.id.initialize({\n        client_id: \"915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com\",\n        context: 'signin',\n        //   ux_mode: \"redirect\", \n        callback: handleCredentialResponse\n      }).then(() => {\n        console.log('gapi initialized...');\n      });\n    };\n  }, []);\n\n  const gettingTokenForLocalSignIn = () => {\n    const getToken = async () => {\n      const token = localStorage.getItem('SH3CK_TOKEN');\n\n      if (token) {\n        const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n          headers: {\n            // 'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response.data);\n        setCurrentUser(response.data);\n        return setLoggedIn(true);\n      }\n\n      setLoggedIn(false);\n      setLoggedOut(true);\n    };\n\n    getToken();\n  };\n\n  const handlingSubmitLoginUser = async user => {\n    try {\n      const {\n        data\n      } = await axios.post(url_userLoginITC, user);\n      console.log(data);\n      localStorage.setItem('SH3CK_TOKEN', data.token); // ******************************************\n\n      const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n        headers: {\n          // 'Content-Type': 'application/json',\n          Authorization: `Bearer ${data.token}`\n        }\n      });\n      setLoginResponse(response);\n      console.log(response.data);\n      setCurrentUser(response.data);\n      setLoading(false);\n      setLoggedIn(true);\n      setLoggedOut(false);\n      console.log('Usuaurio encontrado y hace login');\n    } catch (error) {\n      console.log(error);\n      setLoginResponse(error.response);\n    }\n  };\n\n  const handlingLogin = user => {\n    setLoading(true);\n    setTimeout(async () => {\n      handlingSubmitLoginUser(user);\n      setLoading(false);\n      setLoginSideBarOpen(!loginSideBarOpen);\n    }, 2000);\n  };\n\n  const handlingSubmitLogOutUser = async () => {\n    if (isSignedIn) {\n      const auth = window.gapi.auth2.getAuthInstance();\n      await auth.signOut();\n      setIsSignedIn(false);\n      setMainSideBarOpen(!mainSideBarOpen);\n    }\n\n    if (loggedIn) {\n      localStorage.removeItem('SH3CK_TOKEN');\n      setMainSideBarOpen(!mainSideBarOpen);\n      setLoggedIn(false);\n      setLoggedOut(true);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleLoginSideBar = () => {\n    setLoginSideBarOpen(!loginSideBarOpen);\n  };\n\n  const toggleMainSideBar = () => {\n    setMainSideBarOpen(!mainSideBarOpen);\n  };\n\n  const toggleNotification = () => {\n    setLoginResponse(null);\n  };\n\n  const toggleLanguage = () => {\n    if (language === 'ES') {\n      setLanguage('EN');\n      return;\n    }\n\n    if (language === 'EN') {\n      setLanguage('ES');\n      return;\n    }\n  }; //  *****************************************************************\n  //  **********************Google Login *** **************************\n  // const insertGapiScript = () => {\n  //     console.log('insertGapiScript')\n  //     const script = document.createElement('script')\n  //     script.src = \"https://accounts.google.com/gsi/client\"\n  //     script.onload = () => {\n  //         initializeGooglesignIn()\n  //     }\n  //     document.body.appendChild(script)\n  //   } \n\n\n  const initializeGooglesignIn = () => {//     window.gapi.load('client:auth2', () => {\n    //       window.gapi.client.init({\n    //         client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n    //         scope:'profile'\n    //       }).then(()=> {\n    //       console.log('gapi initialized...')\n    //     //   const response = window.gapi.auth2.getAuthResponse()\n    //     //   console.log(response)\n    //       auth = window.gapi.auth2.getAuthInstance()\n    //       const isSignedIn = auth.isSignedIn.get()\n    //       {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n    //       setIsSignedIn(isSignedIn)\n    //       console.log(isSignedIn)\n    //       auth.isSignedIn.listen(isSignedIn => {\n    //           setIsSignedIn(auth.isSignedIn.get())\n    //       })   \n    //       })\n    //   })\n  };\n\n  const handleCredentialResponse = async response => {\n    console.log(\"Encoded JWT ID token: \" + response.credential);\n    const token = response.credential;\n\n    try {\n      console.log('Sending request to BackEnd api...');\n      console.log(token);\n      const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n        token,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data);\n\n      if (res.status === 201) {\n        console.log(res.data);\n        setLoginData(res.data);\n        setCurrentUser(res.data.fullName);\n        setLoggedIn(true);\n        setLoggedOut(false);\n        return res.status;\n      } // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n\n    } catch (error) {\n      console.log(error);\n      console.log(error.response.data);\n    }\n  }; // const googleTest = async(user, token) => {\n  //     try {\n  //         console.log('Sending request to BackEnd api...')\n  //         console.log(token)\n  //         const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n  //             token,\n  //             headers:{\n  //                 'Content-Type': 'application/json',\n  //             },\n  //         })\n  //         console.log(res)\n  //         const data = await res.data\n  //         if (res.status === 201){\n  //             console.log(data)\n  //             setLoginData(data)   \n  //             setCurrentUser(data.fullName)\n  //             setLoggedIn(true) \n  //             setLoggedOut(false)\n  //             return res.status\n  //         }\n  //     } catch (error) {\n  //         console.log(error)\n  //         console.log(error.response.data)\n  //         setCurrentUser(error.response.data.fullName)\n  //         setLoginData(error.response.data)\n  //         setLoggedIn(true) \n  //         setLoggedOut(false)\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(LoginSideBar, {\n      loginSideBarOpen: loginSideBarOpen,\n      toggleLoginSideBar: toggleLoginSideBar,\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      handlingLogin: handlingLogin,\n      loading: loading,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainSideBarTest, {\n      mainSideBarOpen: mainSideBarOpen,\n      toggleMainSideBar: toggleMainSideBar,\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      handlingSubmitLogOutUser: handlingSubmitLogOutUser,\n      username: currentUser,\n      language: language,\n      loginData: loginData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar,\n      language: language,\n      toggleLanguage: toggleLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleLoginSideBar: toggleLoginSideBar,\n      toggleMainSideBar: toggleMainSideBar,\n      toggleSideBar: toggleSideBar,\n      username: currentUser,\n      login: loggedIn,\n      language: language // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleLoginSideBar: toggleLoginSideBar,\n      toggleMainSideBar: toggleMainSideBar,\n      username: currentUser,\n      login: loggedIn,\n      language: language // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContactSectionTest, {\n      language: language,\n      loggedIn: loggedIn,\n      isSignedIn: isSignedIn,\n      handlingSubmitLoginUser: handlingSubmitLoginUser,\n      loginResponse: loginResponse,\n      toggleNotificationLogin: toggleNotification // googleTest={googleTest}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FooterSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeTest2, \"MEiMjwBuEfn0CXoRP1BCBivzWoU=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = HomeTest2;\nexport default HomeTest2;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeTest2\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest2.js"],"names":["React","useState","useEffect","axios","NavBar","SideBar","LoginSideBar","MainSideBarTest","HeroSection","VideoSection","HiwSection","useMobilDetection","useMobilDetect","NavBarMobil","ContactSectionTest","FooterSection","LoadingSpinner","HomeTest2","isOpen","setIsOpen","loggedIn","setLoggedIn","loggedOut","setLoggedOut","currentUser","setCurrentUser","loginSideBarOpen","setLoginSideBarOpen","mainSideBarOpen","setMainSideBarOpen","loginResponse","setLoginResponse","loading","setLoading","language","setLanguage","googleUser","setGoogleUser","fullName","email","id","imageUrl","token_id","loginData","setLoginData","isSignedIn","setIsSignedIn","mobil","mobil2","url_userLoginITC","auth","gettingTokenForLocalSignIn","window","onload","google","accounts","initialize","client_id","context","callback","handleCredentialResponse","then","console","log","getToken","token","localStorage","getItem","response","get","headers","Authorization","data","handlingSubmitLoginUser","user","post","setItem","error","handlingLogin","setTimeout","handlingSubmitLogOutUser","gapi","auth2","getAuthInstance","signOut","removeItem","toggleSideBar","toggleLoginSideBar","toggleMainSideBar","toggleNotification","toggleLanguage","initializeGooglesignIn","credential","res","status","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\n// import MainSideBar from '../components/mainSideBar/mainSideBar'\nimport MainSideBarTest from '../components/mainSideBar/mainSideBarTest'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\n// import { infoHero, infoVideo, infoHIW, infoContact  } from '../utils/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\n// import ContactSection from '../components/contactSection/contactSection'\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'\n// import StyledFooterSection from '../components/footerSection/styledFooterSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest2 = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('ES')\n\n    // Google OAuth States *****************************************\n    const [googleUser, setGoogleUser] = useState({\n        fullName: '',\n        email: '',\n        id: '',\n        imageUrl: '',\n        token_id: ''\n    })\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    // console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    // const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        window.onload = function () {\n            window.google.accounts.id.initialize({\n              client_id: \"915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com\",\n              context: 'signin',\n              //   ux_mode: \"redirect\", \n              callback: handleCredentialResponse,\n            }).then(() => {\n                console.log('gapi initialized...')\n            })\n        }\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    \n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3CK_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = async() => {\n        if (isSignedIn) {\n            const auth = window.gapi.auth2.getAuthInstance()\n            await auth.signOut()\n            setIsSignedIn(false)\n            setMainSideBarOpen(!mainSideBarOpen)\n        }\n        if (loggedIn){\n            localStorage.removeItem('SH3CK_TOKEN')\n            setMainSideBarOpen(!mainSideBarOpen)\n            setLoggedIn(false)\n            setLoggedOut(true)\n        }\n        \n        \n    }\n \n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n//  *****************************************************************\n//  **********************Google Login *** **************************\n\n        // const insertGapiScript = () => {\n        //     console.log('insertGapiScript')\n        //     const script = document.createElement('script')\n        //     script.src = \"https://accounts.google.com/gsi/client\"\n        //     script.onload = () => {\n        //         initializeGooglesignIn()\n        //     }\n        //     document.body.appendChild(script)\n        //   } \n          \n          const initializeGooglesignIn = () => {\n\n            \n\n        //     window.gapi.load('client:auth2', () => {\n        //       window.gapi.client.init({\n        //         client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n        //         scope:'profile'\n        //       }).then(()=> {\n        //       console.log('gapi initialized...')\n        //     //   const response = window.gapi.auth2.getAuthResponse()\n        //     //   console.log(response)\n        //       auth = window.gapi.auth2.getAuthInstance()\n        //       const isSignedIn = auth.isSignedIn.get()\n        //       {isSignedIn ? setLoggedIn(true) : setLoggedIn(false)}\n        //       setIsSignedIn(isSignedIn)\n        //       console.log(isSignedIn)\n        //       auth.isSignedIn.listen(isSignedIn => {\n        //           setIsSignedIn(auth.isSignedIn.get())\n        //       })   \n        //       })\n        //   })\n          \n        }\n\n        const handleCredentialResponse = async(response) => {\n            console.log(\"Encoded JWT ID token: \" + response.credential)\n            const token = response.credential\n        try {\n            console.log('Sending request to BackEnd api...')\n            console.log(token)\n            const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n                token,\n                headers:{\n                    'Content-Type': 'application/json',\n                },\n            })\n            console.log(res.data)\n            if (res.status === 201){\n                console.log(res.data)\n                setLoginData(res.data)   \n                setCurrentUser(res.data.fullName)\n                setLoggedIn(true) \n                setLoggedOut(false)\n                return res.status\n            }\n            // const res = await axios.post('http://localhost:5000/api/extUsers/google',token)\n            \n        } catch (error) {\n            console.log(error)\n            console.log(error.response.data)\n        }\n        }\n\n        // const googleTest = async(user, token) => {\n            \n        //     try {\n        //         console.log('Sending request to BackEnd api...')\n        //         console.log(token)\n        //         const res = await axios.post('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n        //             token,\n        //             headers:{\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //         console.log(res)\n        //         const data = await res.data\n        //         if (res.status === 201){\n        //             console.log(data)\n        //             setLoginData(data)   \n        //             setCurrentUser(data.fullName)\n        //             setLoggedIn(true) \n        //             setLoggedOut(false)\n        //             return res.status\n        //         }\n        //     } catch (error) {\n        //         console.log(error)\n        //         console.log(error.response.data)\n        //         setCurrentUser(error.response.data.fullName)\n        //         setLoginData(error.response.data)\n        //         setLoggedIn(true) \n        //         setLoggedOut(false)\n        //     }\n            \n            \n        // }\n\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBarTest\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                // onLogin={ onLogin }\n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            // onLogin={ onLogin }\n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <ContactSectionTest \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            // googleTest={googleTest}\n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest2\n"]},"metadata":{},"sourceType":"module"}