{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport InterestedUsersForm from '../contactSection/interestedUserForm';\nimport CheckSection from './checkSection';\nimport LoadingSpinner from '../../utils/loadingSpinner';\nimport OptionsForms from './optionsForms';\nimport LoginForm from './loginForm'; // import LoginFormTest from './loginFormTest'\n\nimport NotificationBox from '../notifications/NotificationBox';\nimport axios from 'axios';\nimport picture from \"../../images/2034873_chat_app_media_mobile_social_icon.svg\";\nimport FormHeader from './formHeader';\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData';\nimport { infoContact } from '../../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactSectionTest = ({\n  language,\n  loggedIn,\n  handlingSubmitLoginUser,\n  loginResponse,\n  toggleNotificationLogin,\n  isSignedIn,\n  googleTest,\n  active,\n  regView,\n  forgotPIN,\n  toggleRegView,\n  settinRegViewAndForgotPINToFalse,\n  toggleForgotPINState,\n  contactSectionOpen\n}) => {\n  _s();\n\n  const [upLoadingUser, setUpLoadingUser] = useState(false);\n  const [response, setResponse] = useState(null); // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n  // const url_users = \"http://192.168.1.102:5000/api/users\"\n\n  const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\";\n  const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\";\n  const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\";\n\n  const toggleNotification = () => {\n    setResponse(null);\n  };\n\n  const handlingLoginUser = values => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      handlingSubmitLoginUser(values);\n      setUpLoadingUser(false);\n    }, 2000);\n  };\n\n  const handlingSubmitInterestedUser = interestedUser => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_interestedUsersInTheCloud, interestedUser);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false);\n          console.log('Gracias por enviarnos tus datos, estaremos en contacto...');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error.response);\n        setUpLoadingUser(false);\n        setResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingSubmitUser = async user => {\n    setUpLoadingUser(true);\n    setTimeout(async () => {\n      try {\n        const response = await axios.post(url_usersInTheCloud, user);\n        console.log(response);\n\n        if (response.status === 201) {\n          setResponse(response);\n          setUpLoadingUser(false);\n          settinRegViewAndForgotPINToFalse();\n          console.log('Gracias por registrarte');\n          return response.status;\n        }\n      } catch (error) {\n        console.log(error);\n        setUpLoadingUser(false);\n        setResponse(error.response);\n      }\n    }, 2000);\n  };\n\n  const handlingNewPINRequest = async dataToRequest => {\n    // console.log(dataToRequest)\n    setUpLoadingUser(true);\n\n    try {\n      const response = await axios.put(url_generatePIN_ITC, dataToRequest);\n      console.log(response.status);\n\n      if (response.status === 200) {\n        console.log(response);\n        setResponse(response);\n        setUpLoadingUser(false);\n        return response.status;\n      }\n    } catch (error) {\n      console.log(error);\n      setUpLoadingUser(false);\n      setResponse(response.error);\n    }\n  };\n\n  const togglingResponseData = () => {\n    if (response && active === 'interested') {\n      return responseDataInterested;\n    }\n\n    if (response && forgotPIN) {\n      return responseDataNewPIN;\n    }\n\n    if (response && active === 'check') {\n      return responseDataRegister;\n    }\n\n    if (loginResponse && active === 'check') {\n      return responseDataLogin;\n    }\n  }; // if (upLoadingUser){\n  //     return (\n  //         <div \n  //         id={infoContact.id}\n  //         className=\"contactContainer\">\n  //             <div className=\"contactWrapper\">\n  //                 <motion.div className=\"contactInfo\"></motion.div>\n  //                 <div className=\"contactForms\">\n  //                     <LoadingSpinner language={language}/>\n  //                     <OptionsForms/>\n  //                     <FormHeader/>\n  //                     { active === 'interested' && loggedIn ? <InterestedUsersForm/>:null}\n  //                     { active === 'interested' && loggedIn === false ? <InterestedUsersForm/>:null}\n  //                     { active === 'check' && loggedIn  ? <InterestedUsersForm/>:null}\n  //                     { active === 'check' && loggedIn === false  ? <LoginForm/>:null}\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )    \n  // }\n  // console.log(active)\n\n\n  console.log(infoContact.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: infoContact.id,\n    className: contactSectionOpen ? 'contactContainer_open' : 'contactContainer',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForms\",\n        children: [response || loginResponse ? /*#__PURE__*/_jsxDEV(NotificationBox, {\n          toggleNotification: response ? toggleNotification : toggleNotificationLogin,\n          response: response ? response : loginResponse,\n          responseData: togglingResponseData() //  switchToCheck={switchToCheck}\n          ,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this) : null, !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHeader, {\n            active: active,\n            loggedIn: loggedIn,\n            regView: regView,\n            forgotPIN: forgotPIN,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : null, loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CheckSection, {\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 14\n          }, this)\n        }, void 0, false) : null, active === 'interested' && !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InterestedUsersForm, {\n            handlingSubmitInterestedUser: handlingSubmitInterestedUser,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 14\n          }, this)\n        }, void 0, false) : null, active === 'check' && !loggedIn ? /*#__PURE__*/_jsxDEV(LoginForm, {\n          regView: regView,\n          forgotPIN: forgotPIN,\n          toggleRegView: toggleRegView,\n          toggleForgotPINState: toggleForgotPINState,\n          handlingSubmitUser: handlingSubmitUser,\n          handlingLoginUser: handlingLoginUser,\n          handlingNewPINRequest: handlingNewPINRequest,\n          language: language,\n          isSignedIn: isSignedIn,\n          googleTest: googleTest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactSectionTest, \"uaofb6N1mA569aq12vA/mp9HFyc=\");\n\n_c = ContactSectionTest;\nexport default ContactSectionTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactSectionTest\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/contactSection.js"],"names":["React","useState","motion","InterestedUsersForm","CheckSection","LoadingSpinner","OptionsForms","LoginForm","NotificationBox","axios","FormHeader","responseDataInterested","responseDataRegister","responseDataLogin","responseDataNewPIN","infoContact","ContactSectionTest","language","loggedIn","handlingSubmitLoginUser","loginResponse","toggleNotificationLogin","isSignedIn","googleTest","active","regView","forgotPIN","toggleRegView","settinRegViewAndForgotPINToFalse","toggleForgotPINState","contactSectionOpen","upLoadingUser","setUpLoadingUser","response","setResponse","url_interestedUsersInTheCloud","url_usersInTheCloud","url_generatePIN_ITC","toggleNotification","handlingLoginUser","values","setTimeout","handlingSubmitInterestedUser","interestedUser","post","console","log","status","error","handlingSubmitUser","user","handlingNewPINRequest","dataToRequest","put","togglingResponseData","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport  { motion } from 'framer-motion'\n\nimport InterestedUsersForm from '../contactSection/interestedUserForm'\nimport CheckSection from './checkSection'\nimport LoadingSpinner from '../../utils/loadingSpinner' \nimport OptionsForms from './optionsForms'\nimport LoginForm from './loginForm'\n// import LoginFormTest from './loginFormTest'\nimport NotificationBox from '../notifications/NotificationBox'\nimport axios from 'axios'\nimport picture from '../../images/2034873_chat_app_media_mobile_social_icon.svg'\nimport FormHeader from './formHeader'\nimport { responseDataInterested, responseDataRegister, responseDataLogin, responseDataNewPIN } from '../notifications/notificationData'\nimport { infoContact } from '../../utils/data'\n\nconst ContactSectionTest = ({\n    language,\n    loggedIn,\n    handlingSubmitLoginUser,\n    loginResponse,\n    toggleNotificationLogin,\n    isSignedIn,\n    googleTest,\n    active,\n    regView,\n    forgotPIN,\n    toggleRegView,\n    settinRegViewAndForgotPINToFalse,\n    toggleForgotPINState,\n    contactSectionOpen\n\n}) => {\n   \n    const [ upLoadingUser, setUpLoadingUser ] = useState(false)\n    const [response, setResponse ] = useState(null)\n    // const url_interestedUsers = \"http://192.168.1.102:5000/api/interestedUsers\"\n    // const url_users = \"http://192.168.1.102:5000/api/users\"\n    const url_interestedUsersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/interestedUsers\"\n    const url_usersInTheCloud = \"https://intense-atoll-00786.herokuapp.com/api/users\"\n    const url_generatePIN_ITC = \"https://intense-atoll-00786.herokuapp.com/api/users/newPIN\"\n    \n\n    const toggleNotification = () => {\n        setResponse(null)\n    }\n\n\n    const handlingLoginUser = (values) => {\n        setUpLoadingUser(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(values)\n            setUpLoadingUser(false)\n        },2000)\n    } \n\n    const handlingSubmitInterestedUser = (interestedUser) => {\n        \n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_interestedUsersInTheCloud, interestedUser)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        console.log('Gracias por enviarnos tus datos, estaremos en contacto...')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error.response)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n        \n    }\n\n    const handlingSubmitUser = async(user) => {\n        setUpLoadingUser(true)\n        setTimeout(async()=> {\n            try {\n                const response = await axios.post(url_usersInTheCloud, user)\n                    console.log(response)\n                    if (response.status === 201){\n                        setResponse(response)\n                        setUpLoadingUser(false)\n                        settinRegViewAndForgotPINToFalse()\n                        console.log('Gracias por registrarte')\n                        return response.status\n                    }\n            } catch (error) {\n                console.log(error)\n                setUpLoadingUser(false)\n                setResponse(error.response)\n            }\n        },2000)\n    } \n\n    const handlingNewPINRequest = async(dataToRequest) => {\n        // console.log(dataToRequest)\n        setUpLoadingUser(true)\n        try {\n            const response = await axios.put(url_generatePIN_ITC, dataToRequest)\n            console.log(response.status)\n            if (response.status === 200){\n                console.log(response)\n                setResponse(response)\n                setUpLoadingUser(false)\n                return response.status\n            }\n        } catch (error) {\n            console.log(error)\n            setUpLoadingUser(false)\n            setResponse(response.error)\n        }\n    }\n\nconst togglingResponseData = () => {\n    if (response && active === 'interested'){\n        return responseDataInterested\n    }\n    if (response && forgotPIN){\n        return responseDataNewPIN\n    }\n    if (response && active === 'check'){\n        return responseDataRegister\n    }\n    if (loginResponse && active === 'check'){\n        return responseDataLogin\n    } \n}\n\n// if (upLoadingUser){\n//     return (\n//         <div \n//         id={infoContact.id}\n//         className=\"contactContainer\">\n//             <div className=\"contactWrapper\">\n//                 <motion.div className=\"contactInfo\"></motion.div>\n//                 <div className=\"contactForms\">\n//                     <LoadingSpinner language={language}/>\n//                     <OptionsForms/>\n//                     <FormHeader/>\n//                     { active === 'interested' && loggedIn ? <InterestedUsersForm/>:null}\n//                     { active === 'interested' && loggedIn === false ? <InterestedUsersForm/>:null}\n//                     { active === 'check' && loggedIn  ? <InterestedUsersForm/>:null}\n//                     { active === 'check' && loggedIn === false  ? <LoginForm/>:null}\n//                 </div>\n//             </div>\n//         </div>\n//     )    \n// }\n// console.log(active)\nconsole.log(infoContact.id)\nreturn (\n    <div \n    id={infoContact.id}\n    className={contactSectionOpen ? 'contactContainer_open' : 'contactContainer' }>\n        <div className={contactSectionOpen ? 'contactWrapper_open' : 'contactWrapper' }>\n            <div className=\"contactForms\">\n             \n             {response || loginResponse ?\n            <NotificationBox\n             toggleNotification={response ? toggleNotification : toggleNotificationLogin} \n             response={response ? response : loginResponse }\n             responseData={togglingResponseData()} \n            //  switchToCheck={switchToCheck}\n             language={language}\n             />\n             : null\n             }\n            \n            { !loggedIn  ? \n            <>\n            <FormHeader\n            active = {active}\n            loggedIn={loggedIn}\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            language={language}\n            />\n            </>\n            :\n            null\n            }\n            \n            { loggedIn ? \n             <>\n             <CheckSection language={language}/>\n             </>\n             \n             :\n             null\n            }\n            \n                \n            { active === 'interested' && !loggedIn ? \n             <>\n             <InterestedUsersForm \n             handlingSubmitInterestedUser={handlingSubmitInterestedUser}\n             language={language}\n             />\n            </>                     \n             :\n             null\n            }\n            \n            { active === 'check'  && !loggedIn  ? \n            <LoginForm\n            regView={regView}\n            forgotPIN = {forgotPIN}\n            toggleRegView={toggleRegView}\n            toggleForgotPINState={toggleForgotPINState}\n            handlingSubmitUser={handlingSubmitUser}\n            handlingLoginUser={handlingLoginUser}\n            handlingNewPINRequest={handlingNewPINRequest}\n            language={language}\n            isSignedIn={isSignedIn}\n            googleTest={googleTest}\n            />\n            :\n            null\n            }\n            </div>\n            \n        </div>\n        \n    </div>\n)\n}\n\nexport default ContactSectionTest\n"]},"metadata":{},"sourceType":"module"}