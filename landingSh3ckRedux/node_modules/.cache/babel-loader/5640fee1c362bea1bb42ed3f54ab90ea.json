{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../components/navBar/navBar';\nimport SideBar from '../components/sideBar/sideBar';\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'; // import MainSideBar from '../components/mainSideBar/mainSideBar'\n\nimport MainSideBarTest from '../components/mainSideBar/mainSideBarTest'; // import StyledSideBar from '../components/sideBar/styledSideBar'\n\nimport HeroSection from '../components/heroSection/heroSection'; // import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\n\nimport VideoSection from '../components/videoSection/videoSection';\nimport HiwSection from '../components/hiwSection/hiwSection';\nimport { infoHero, infoVideo, infoHIW, infoContact } from '../utils/data';\nimport useMobilDetection from '../utils/mobilDetection';\nimport useMobilDetect from '../utils/mobilHook';\nimport NavBarMobil from '../components/navBar/navBarMobil'; // import ContactSection from '../components/contactSection/contactSection'\n\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'; // import StyledFooterSection from '../components/footerSection/styledFooterSection'\n\nimport FooterSection from '../components/footerSection/footerSection';\nimport LoadingSpinner from '../utils/loadingSpinner'; // f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeTest = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loggedOut, setLoggedOut] = useState(true);\n  const [currentUser, setCurrentUser] = useState('');\n  const [loginSideBarOpen, setLoginSideBarOpen] = useState(false);\n  const [mainSideBarOpen, setMainSideBarOpen] = useState(false);\n  const [loginResponse, setLoginResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [language, setLanguage] = useState('EN'); // Google OAuth States *****************************************\n\n  const [googleUser, setGoogleUser] = useState({\n    fullName: '',\n    email: '',\n    id: '',\n    imageUrl: '',\n    token_id: ''\n  });\n  const [loginData, setLoginData] = useState(null);\n  const [isSignedIn, setIsSignedIn] = useState(null);\n  console.log(isSignedIn); // **************************************************************\n\n  const mobil = useMobilDetect();\n  const mobil2 = useMobilDetection();\n  const url_userLogin = \"http://192.168.1.102:5000/api/users/login\";\n  const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\";\n  let auth;\n  useEffect(() => {\n    gettingTokenForLocalSignIn();\n    insertGapiScript();\n  }, []);\n\n  const gettingTokenForLocalSignIn = () => {\n    const getToken = async () => {\n      const token = localStorage.getItem('SH3CK_TOKEN');\n\n      if (token) {\n        const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n          headers: {\n            // 'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response.data);\n        setCurrentUser(response.data);\n        return setLoggedIn(true);\n      }\n\n      setLoggedIn(false);\n      setLoggedOut(true);\n    };\n\n    getToken();\n  };\n\n  const insertGapiScript = () => {\n    const script = document.createElement('script');\n    script.src = \"https://apis.google.com/js/platform.js\";\n\n    script.onload = () => {\n      initializeGooglesignIn();\n    };\n\n    document.body.appendChild(script);\n  };\n\n  const initializeGooglesignIn = () => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n        scope: 'profile'\n      }).then(() => {\n        console.log('gapi initialized...');\n        auth = window.gapi.auth2.getAuthInstance();\n        const isSignedIn = auth.isSignedIn.get();\n        setIsSignedIn(isSignedIn);\n        googleTest(auth);\n        console.log(isSignedIn);\n        auth.isSignedIn.listen(isSignedIn => {\n          googleTest(isSignedIn, auth);\n        });\n        window.gapi.load('signin2', () => {\n          const params = {\n            onsuccess: () => {\n              googleTest(auth);\n              console.log('user has finished signing in...');\n            },\n            'theme': 'dark'\n          };\n          window.gapi.signin2.render('loginButton', params);\n        });\n      });\n    });\n  };\n\n  const handlingSubmitLoginUser = async user => {\n    try {\n      const {\n        data\n      } = await axios.post(url_userLoginITC, user);\n      console.log(data);\n      localStorage.setItem('SH3C_TOKEN', data.token); // ******************************************\n\n      const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n        headers: {\n          // 'Content-Type': 'application/json',\n          Authorization: `Bearer ${data.token}`\n        }\n      });\n      setLoginResponse(response);\n      console.log(response.data);\n      setCurrentUser(response.data);\n      setLoading(false);\n      setLoggedIn(true);\n      setLoggedOut(false);\n      console.log('Usuaurio encontrado y hace login');\n    } catch (error) {\n      console.log(error);\n      setLoginResponse(error.response);\n    }\n  };\n\n  const handlingLogin = user => {\n    setLoading(true);\n    setTimeout(async () => {\n      handlingSubmitLoginUser(user);\n      setLoading(false);\n      setLoginSideBarOpen(!loginSideBarOpen);\n    }, 2000);\n  };\n\n  const handlingSubmitLogOutUser = () => {\n    localStorage.removeItem('SH3CK_TOKEN');\n    setMainSideBarOpen(!mainSideBarOpen);\n    setLoggedIn(false);\n    setLoggedOut(true);\n  };\n\n  const toggleSideBar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleLoginSideBar = () => {\n    setLoginSideBarOpen(!loginSideBarOpen);\n  };\n\n  const toggleMainSideBar = () => {\n    setMainSideBarOpen(!mainSideBarOpen);\n  };\n\n  const toggleNotification = () => {\n    setLoginResponse(null);\n  };\n\n  const toggleLanguage = () => {\n    if (language === 'ES') {\n      setLanguage('EN');\n      return;\n    }\n\n    if (language === 'EN') {\n      setLanguage('ES');\n      return;\n    }\n  }; //  ************* Google OAuth Process and functions ****************\n\n\n  const handleGoogleLogin = async googleData => {\n    console.log('Login Success:', googleData.profileObj);\n    setLoginData(googleData.profileObj.name);\n\n    try {\n      console.log('handling Login with Google...');\n      console.log(googleData.name);\n      const res = await fetch('https://intense-atoll-00786.herokuapp.com/api/extUsers/google', {\n        method: 'POST',\n        body: JSON.stringify({\n          token: googleData.tokenId\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setLoginData(data);\n      setCurrentUser(data.fullName);\n      setLoggedIn(true);\n      setLoggedOut(false);\n    } catch (error) {\n      console.log(error);\n      setCurrentUser(googleData.profileObj.name);\n      setLoginData(googleData.profileObj);\n      setLoggedIn(true);\n      setLoggedOut(false);\n    }\n  };\n\n  console.log(loginData);\n\n  const handleGoogleFailure = res => {\n    console.log('handling Failure...', res);\n  };\n\n  const handleGoogleLogout = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear();\n    setMainSideBarOpen(!mainSideBarOpen);\n    setLoginData(null);\n    setLoggedIn(false);\n    setLoggedOut(true);\n  }; //  *****************************************************************\n  //  **********************Google Login New **************************\n  //   const user = auth.currentUser.get()\n  //   console.log(user)\n  //   const profile = user.getBasicProfile()\n  //   console.log(profile)\n  //   const email = profile.getEmail()\n  //   console.log(email)\n  //   const imageUrl = profile.getImageUrl()\n  //   console.log(imageUrl)\n\n\n  const googleTest = auth => {\n    console.log(auth); // const user = auth.currentUser.get()\n    // console.log(user)\n    // const profile = user.getBasicProfile()\n    // const email = profile.getEmail()\n    // console.log(email)\n    // const fullName = profile.getName()\n    // const imageUrl = profile.getImageUrl()\n    // const token_id = auth.currentUser.get().wc.id_token\n    // const id = profile.getId()\n    // setGoogleUser({\n    //     fullName: fullName,\n    //     email: email,\n    //     id: id,\n    //     imageUrl: imageUrl,\n    //     // token_id: token_id\n    // })    \n    // setCurrentUser(googleUser.fullName)\n    // setLoginData(googleUser)\n    // setLoggedIn(true) \n    // setLoggedOut(false)\n  };\n\n  console.log(googleUser);\n  console.log(loginData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(LoginSideBar, {\n      loginSideBarOpen: loginSideBarOpen,\n      toggleLoginSideBar: toggleLoginSideBar,\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      handlingLogin: handlingLogin,\n      loading: loading,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainSideBarTest, {\n      mainSideBarOpen: mainSideBarOpen,\n      toggleMainSideBar: toggleMainSideBar,\n      loggedIn: loggedIn,\n      loggedOut: loggedOut,\n      handlingSubmitLogOutUser: handlingSubmitLogOutUser,\n      username: currentUser,\n      language: language,\n      loginData: loginData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: isOpen,\n      toggleSideBar: toggleSideBar,\n      language: language,\n      toggleLanguage: toggleLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), mobil2.screenWidth <= 1098 || mobil ? /*#__PURE__*/_jsxDEV(NavBarMobil, {\n      toggleLoginSideBar: toggleLoginSideBar,\n      toggleMainSideBar: toggleMainSideBar,\n      toggleSideBar: toggleSideBar,\n      username: currentUser,\n      login: loggedIn,\n      language: language // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavBar, {\n      toggleLoginSideBar: toggleLoginSideBar,\n      toggleMainSideBar: toggleMainSideBar,\n      username: currentUser,\n      login: loggedIn,\n      language: language // onLogin={ onLogin }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HiwSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContactSectionTest, {\n      language: language,\n      loggedIn: loggedIn,\n      isSignedIn: isSignedIn,\n      handlingSubmitLoginUser: handlingSubmitLoginUser,\n      loginResponse: loginResponse,\n      toggleNotificationLogin: toggleNotification,\n      googleTest: googleTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FooterSection, {\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeTest, \"7q+DoElCAYVTrbvKVSMDc7S/t3E=\", false, function () {\n  return [useMobilDetect, useMobilDetection];\n});\n\n_c = HomeTest;\nexport default HomeTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeTest\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/views/homeTest.js"],"names":["React","useState","useEffect","axios","NavBar","SideBar","LoginSideBar","MainSideBarTest","HeroSection","VideoSection","HiwSection","infoHero","infoVideo","infoHIW","infoContact","useMobilDetection","useMobilDetect","NavBarMobil","ContactSectionTest","FooterSection","LoadingSpinner","HomeTest","isOpen","setIsOpen","loggedIn","setLoggedIn","loggedOut","setLoggedOut","currentUser","setCurrentUser","loginSideBarOpen","setLoginSideBarOpen","mainSideBarOpen","setMainSideBarOpen","loginResponse","setLoginResponse","loading","setLoading","language","setLanguage","googleUser","setGoogleUser","fullName","email","id","imageUrl","token_id","loginData","setLoginData","isSignedIn","setIsSignedIn","console","log","mobil","mobil2","url_userLogin","url_userLoginITC","auth","gettingTokenForLocalSignIn","insertGapiScript","getToken","token","localStorage","getItem","response","get","headers","Authorization","data","script","document","createElement","src","onload","initializeGooglesignIn","body","appendChild","window","gapi","load","client","init","client_id","scope","then","auth2","getAuthInstance","googleTest","listen","params","onsuccess","signin2","render","handlingSubmitLoginUser","user","post","setItem","error","handlingLogin","setTimeout","handlingSubmitLogOutUser","removeItem","toggleSideBar","toggleLoginSideBar","toggleMainSideBar","toggleNotification","toggleLanguage","handleGoogleLogin","googleData","profileObj","name","res","fetch","method","JSON","stringify","tokenId","json","handleGoogleFailure","handleGoogleLogout","alert","clear","screenWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport NavBar from '../components/navBar/navBar'\nimport SideBar from '../components/sideBar/sideBar'\nimport LoginSideBar from '../components/loginSideBar/loginSideBar'\n// import MainSideBar from '../components/mainSideBar/mainSideBar'\nimport MainSideBarTest from '../components/mainSideBar/mainSideBarTest'\n// import StyledSideBar from '../components/sideBar/styledSideBar'\nimport HeroSection from '../components/heroSection/heroSection'\n// import StyledNavBar from '../components/navBar/styledNavbar'\n// import StyledHeroSection from '../components/heroSection/styledHeroSection'\nimport VideoSection from '../components/videoSection/videoSection'\nimport HiwSection from '../components/hiwSection/hiwSection'\nimport { infoHero, infoVideo, infoHIW, infoContact  } from '../utils/data'\nimport useMobilDetection from '../utils/mobilDetection'\nimport useMobilDetect from '../utils/mobilHook'\nimport NavBarMobil from '../components/navBar/navBarMobil'\n// import ContactSection from '../components/contactSection/contactSection'\nimport ContactSectionTest from '../components/contactSection/contactSectionTest'\n// import StyledFooterSection from '../components/footerSection/styledFooterSection'\nimport FooterSection from '../components/footerSection/footerSection'\nimport LoadingSpinner from '../utils/loadingSpinner'\n\n\n// f31c5fee13aef74568ac client id\n// 5029d96a85c6c31586054f0c2d8d3010d8fdae69  client secret\n\nconst HomeTest = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const [ loggedIn, setLoggedIn ] = useState(false)\n    const [ loggedOut, setLoggedOut ] = useState(true)\n    const [currentUser, setCurrentUser ] = useState('')\n    const [ loginSideBarOpen, setLoginSideBarOpen ] = useState(false)\n    const [ mainSideBarOpen, setMainSideBarOpen ] = useState(false)\n    const [ loginResponse, setLoginResponse ] = useState(null)\n    const [ loading, setLoading ] = useState(false)\n    const [ language, setLanguage ] = useState('EN')\n\n    // Google OAuth States *****************************************\n    const [googleUser, setGoogleUser] = useState({\n        fullName: '',\n        email: '',\n        id: '',\n        imageUrl: '',\n        token_id: ''\n    })\n    const [ loginData, setLoginData ] = useState(null)\n    const [isSignedIn, setIsSignedIn] = useState(null)\n    console.log(isSignedIn)\n    // **************************************************************\n    \n    \n    const mobil = useMobilDetect()\n    const mobil2 = useMobilDetection()\n    const url_userLogin = \"http://192.168.1.102:5000/api/users/login\"\n    const url_userLoginITC = \"https://intense-atoll-00786.herokuapp.com/api/users/login\"\n    let auth\n    useEffect(() => {\n        gettingTokenForLocalSignIn()\n        insertGapiScript()\n\n    },[])\n\n    const gettingTokenForLocalSignIn = () => {\n        const getToken = async() => {\n            const token = localStorage.getItem('SH3CK_TOKEN')\n            if (token){\n                const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                    headers:{\n                        // 'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}` \n                    } \n                })\n                console.log(response.data)\n                setCurrentUser(response.data)\n                return setLoggedIn(true)\n            }\n            setLoggedIn(false)\n            setLoggedOut(true)\n            \n            \n        }   \n        getToken()\n    }\n\n    const insertGapiScript = () => {\n        const script = document.createElement('script')\n        script.src = \"https://apis.google.com/js/platform.js\"\n        script.onload = () => {\n            initializeGooglesignIn()\n        }\n        document.body.appendChild(script)\n      } \n      \n      const initializeGooglesignIn = () => {\n        window.gapi.load('client:auth2', () => {\n          window.gapi.client.init({\n            client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n            scope:'profile'\n          }).then(()=> {\n          console.log('gapi initialized...')\n          auth = window.gapi.auth2.getAuthInstance()\n          const isSignedIn = auth.isSignedIn.get()\n          setIsSignedIn(isSignedIn)\n          googleTest(auth)\n          console.log(isSignedIn)\n          auth.isSignedIn.listen(isSignedIn => {\n              googleTest(isSignedIn, auth)\n          })\n          window.gapi.load('signin2', () => {\n            const params = {\n                onsuccess: () => {\n                    googleTest(auth)\n                    console.log('user has finished signing in...')\n                },\n                'theme': 'dark'\n            }\n            window.gapi.signin2.render('loginButton', params )\n          })\n          \n          })\n      })\n      \n  }\n\n    const handlingSubmitLoginUser = async(user) => {    \n        try {\n            const { data } = await axios.post(url_userLoginITC, user)\n            console.log(data)\n            localStorage.setItem('SH3C_TOKEN', data.token)\n            // ******************************************\n            const response = await axios.get('https://intense-atoll-00786.herokuapp.com/api/users/me', {\n                headers:{\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${data.token}` \n                } \n            })\n            setLoginResponse(response)\n            console.log(response.data)\n            setCurrentUser(response.data)\n            setLoading(false)\n            setLoggedIn(true)\n            setLoggedOut(false)\n            console.log('Usuaurio encontrado y hace login')    \n        } catch (error) {\n            console.log(error)\n            setLoginResponse(error.response)\n        }\n    }\n\n    const handlingLogin = (user) => {\n        setLoading(true)\n        setTimeout(async() => {\n            handlingSubmitLoginUser(user)\n            setLoading(false)\n            setLoginSideBarOpen(!loginSideBarOpen)\n        }, 2000);\n    }\n\n    const handlingSubmitLogOutUser = () => {\n        localStorage.removeItem('SH3CK_TOKEN')\n        setMainSideBarOpen(!mainSideBarOpen)\n        setLoggedIn(false)\n        setLoggedOut(true)\n        \n    }\n \n    \n    const toggleSideBar = () => {\n        setIsOpen(!isOpen)\n        \n    } \n    const toggleLoginSideBar = () => {\n        setLoginSideBarOpen(!loginSideBarOpen)\n        \n    }\n    \n    const toggleMainSideBar = () => {\n        setMainSideBarOpen(!mainSideBarOpen)\n    } \n    const toggleNotification = () => {\n        setLoginResponse(null)\n    }\n\n    const toggleLanguage = () => {\n        if (language === 'ES') {\n            setLanguage('EN')\n            return\n        }\n        if (language === 'EN'){\n            setLanguage('ES')\n            return\n        } \n    }\n\n  \n  //  ************* Google OAuth Process and functions ****************\n\n  const handleGoogleLogin = async(googleData) => {\n    console.log('Login Success:', googleData.profileObj)\n    setLoginData(googleData.profileObj.name)\n    try {\n        console.log('handling Login with Google...')\n        console.log(googleData.name)\n        const res = await fetch('https://intense-atoll-00786.herokuapp.com/api/extUsers/google',{\n            method: 'POST',\n            body: JSON.stringify({\n              token: googleData.tokenId,\n            }),\n            headers:{\n              'Content-Type': 'application/json'\n            }\n          })\n          const data = await res.json()\n          console.log(data)\n          setLoginData(data)   \n          setCurrentUser(data.fullName)\n          setLoggedIn(true) \n          setLoggedOut(false)\n    } catch (error) {\n        console.log(error)\n        setCurrentUser(googleData.profileObj.name)\n        setLoginData(googleData.profileObj)\n        setLoggedIn(true) \n        setLoggedOut(false)\n    }\n}\n\nconsole.log(loginData)\nconst handleGoogleFailure = (res) => {\n    console.log('handling Failure...', res)\n}\n\nconst handleGoogleLogout = () => {\n    alert(\"You have been logged out successfully\");\n    console.clear()\n    setMainSideBarOpen(!mainSideBarOpen)\n    setLoginData(null)\n    setLoggedIn(false)\n    setLoggedOut(true)\n}\n\n//  *****************************************************************\n//  **********************Google Login New **************************\n\n//   const user = auth.currentUser.get()\n        //   console.log(user)\n        //   const profile = user.getBasicProfile()\n        //   console.log(profile)\n        //   const email = profile.getEmail()\n        //   console.log(email)\n        //   const imageUrl = profile.getImageUrl()\n        //   console.log(imageUrl)\n\nconst googleTest = (auth) => {\n    console.log(auth)\n    // const user = auth.currentUser.get()\n    // console.log(user)\n    // const profile = user.getBasicProfile()\n    // const email = profile.getEmail()\n    // console.log(email)\n    // const fullName = profile.getName()\n    // const imageUrl = profile.getImageUrl()\n    // const token_id = auth.currentUser.get().wc.id_token\n    // const id = profile.getId()\n    // setGoogleUser({\n    //     fullName: fullName,\n    //     email: email,\n    //     id: id,\n    //     imageUrl: imageUrl,\n    //     // token_id: token_id\n    // })    \n    // setCurrentUser(googleUser.fullName)\n    // setLoginData(googleUser)\n    // setLoggedIn(true) \n    // setLoggedOut(false)\n}\n\nconsole.log(googleUser)\nconsole.log(loginData)\n    \n    return (\n        <>\n            { loading ?\n            <LoadingSpinner/>\n            :\n            null\n            }\n            \n            {/* {!loggedIn && loginSideBarOpen ? */}\n            <LoginSideBar\n            loginSideBarOpen={ loginSideBarOpen } \n            toggleLoginSideBar={ toggleLoginSideBar }\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingLogin={handlingLogin}\n            loading = {loading}\n            language={language}\n            />\n            {/* : null */}\n            {/* } */}\n\n            {/* {!loggedOut && logoutSideBarOpen ? */}\n            <MainSideBarTest\n            mainSideBarOpen={mainSideBarOpen}\n            toggleMainSideBar={toggleMainSideBar}\n            loggedIn={loggedIn}\n            loggedOut={loggedOut}\n            handlingSubmitLogOutUser={handlingSubmitLogOutUser}\n            username={currentUser}\n            language={language}\n            loginData={loginData}           \n            />\n            {/* : null */}\n            {/* } */}\n            \n            <SideBar \n            isOpen={ isOpen } \n            toggleSideBar={ toggleSideBar }\n            language={language}\n            toggleLanguage={toggleLanguage}\n            />\n            \n            { mobil2.screenWidth <= 1098 || mobil ?  \n                <NavBarMobil \n                toggleLoginSideBar={toggleLoginSideBar}\n                toggleMainSideBar={toggleMainSideBar}\n                toggleSideBar={ toggleSideBar }  \n                username={currentUser}\n                login={ loggedIn }\n                language={language}\n                // onLogin={ onLogin }\n            /> : <NavBar\n            toggleLoginSideBar={toggleLoginSideBar}\n            toggleMainSideBar={toggleMainSideBar} \n            username={currentUser}\n            login={ loggedIn }\n            language={language}\n            // onLogin={ onLogin }\n        />\n            }\n            <HeroSection language={language} />\n            <VideoSection language={language}/>\n            <HiwSection language={language}/>\n            <ContactSectionTest \n            language={language}\n            loggedIn={loggedIn}\n            isSignedIn={isSignedIn}\n            handlingSubmitLoginUser={ handlingSubmitLoginUser}\n            loginResponse={loginResponse}\n            toggleNotificationLogin={toggleNotification}\n            googleTest={googleTest}\n            />\n            <FooterSection language={language}/>\n        </>\n    )\n}\n\nexport default HomeTest\n"]},"metadata":{},"sourceType":"module"}