{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import '../../bookface.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GoogleAuth3 = ({\n  googleTest\n}) => {\n  _s();\n\n  useEffect(() => {\n    insertGapiScript();\n  }, []);\n  let auth;\n  const [isSignedIn, setIsSignedIn] = useState(null);\n\n  const insertGapiScript = () => {\n    const script = document.createElement('script');\n    script.src = \"https://apis.google.com/js/platform.js\";\n\n    script.onload = () => {\n      initializeGooglesignIn();\n    };\n\n    document.body.appendChild(script);\n  }; // const googleUserSchema = (auth) => {\n  // const user = auth.currentUser.get()\n  // const profile = user.getBasicProfile()\n  // const email = profile.getEmail()\n  // const fullName = profile.getName()\n  // const imageUrl = profile.getImageUrl()\n  // const token_id = auth.currentUser.get().wc.id_token\n  // const id = profile.getId()\n  // const googleUser = {\n  //     fullName: fullName,\n  //     email: email,\n  //     id: id,\n  //     imageUrl: imageUrl,\n  //     token_id: token_id\n  // }  \n  // return googleUser\n  // }\n\n\n  const initializeGooglesignIn = () => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n        scope: 'profile'\n      }).then(() => {\n        console.log('gapi initialized...');\n        auth = window.gapi.auth2.getAuthInstance();\n        const isSignedIn = auth.isSignedIn.get();\n        setIsSignedIn(isSignedIn);\n        googleTest(auth);\n        console.log(isSignedIn);\n        auth.isSignedIn.listen(isSignedIn => {\n          googleTest(isSignedIn, auth);\n        });\n        window.gapi.load('signin2', () => {\n          const params = {\n            onsuccess: () => {\n              googleTest(auth);\n              console.log('user has finished signing in...');\n            },\n            'theme': 'dark'\n          };\n          window.gapi.signin2.render('loginButton', params);\n        });\n      });\n    });\n  };\n\n  if (isSignedIn === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checking if you are signed in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"googleAuthContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loginButton\",\n        children: \"Sign In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false); // return isSignedIn ? <h1>You are logged in</h1> : <h1>You are NOT logged in</h1>\n};\n\n_s(GoogleAuth3, \"ZohjxRKff4XG/Q2xrHF/9goRsT8=\");\n\n_c = GoogleAuth3;\nexport default GoogleAuth3;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth3\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/buttons/googleAuth3.js"],"names":["React","useState","useEffect","GoogleAuth3","googleTest","insertGapiScript","auth","isSignedIn","setIsSignedIn","script","document","createElement","src","onload","initializeGooglesignIn","body","appendChild","window","gapi","load","client","init","client_id","scope","then","console","log","auth2","getAuthInstance","get","listen","params","onsuccess","signin2","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAElCF,EAAAA,SAAS,CAAC,MAAK;AACXG,IAAAA,gBAAgB;AACnB,GAFQ,EAEP,EAFO,CAAT;AAGE,MAAIC,IAAJ;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BP,QAAQ,CAAC,IAAD,CAA7C;;AAEA,QAAMI,gBAAgB,GAAG,MAAM;AAC7B,UAAMI,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,wCAAb;;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AAClBC,MAAAA,sBAAsB;AACzB,KAFD;;AAGAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,GAPD,CARkC,CAiBlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMK,sBAAsB,GAAG,MAAM;AACnCG,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,SAAS,EAAE,0EADW;AAEtBC,QAAAA,KAAK,EAAC;AAFgB,OAAxB,EAGGC,IAHH,CAGQ,MAAK;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACApB,QAAAA,IAAI,GAAGW,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAkBC,eAAlB,EAAP;AACA,cAAMrB,UAAU,GAAGD,IAAI,CAACC,UAAL,CAAgBsB,GAAhB,EAAnB;AACArB,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAH,QAAAA,UAAU,CAACE,IAAD,CAAV;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,UAAZ;AACAD,QAAAA,IAAI,CAACC,UAAL,CAAgBuB,MAAhB,CAAuBvB,UAAU,IAAI;AACjCH,UAAAA,UAAU,CAACG,UAAD,EAAaD,IAAb,CAAV;AACH,SAFD;AAGAW,QAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,SAAjB,EAA4B,MAAM;AAChC,gBAAMY,MAAM,GAAG;AACXC,YAAAA,SAAS,EAAE,MAAM;AACb5B,cAAAA,UAAU,CAACE,IAAD,CAAV;AACAmB,cAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,aAJU;AAKX,qBAAS;AALE,WAAf;AAOAT,UAAAA,MAAM,CAACC,IAAP,CAAYe,OAAZ,CAAoBC,MAApB,CAA2B,aAA3B,EAA0CH,MAA1C;AACD,SATD;AAWC,OAxBD;AAyBH,KA1BC;AA4BL,GA7BG;;AAgCA,MAAIxB,UAAU,KAAK,IAAnB,EAAwB;AACtB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI;AACA,QAAA,EAAE,EAAC,aADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ,CAzEkC,CAoFlC;AAEH,CAtFD;;GAAMJ,W;;KAAAA,W;AAwFN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import '../../bookface.css'\n\nconst GoogleAuth3 = ({googleTest}) => {\n    \n    useEffect(()=> {\n        insertGapiScript()\n    },[])\n      let auth\n    const [isSignedIn, setIsSignedIn ] = useState(null)\n      \n    const insertGapiScript = () => {\n      const script = document.createElement('script')\n      script.src = \"https://apis.google.com/js/platform.js\"\n      script.onload = () => {\n          initializeGooglesignIn()\n      }\n      document.body.appendChild(script)\n    } \n    \n    // const googleUserSchema = (auth) => {\n    \n    // const user = auth.currentUser.get()\n    // const profile = user.getBasicProfile()\n    // const email = profile.getEmail()\n    // const fullName = profile.getName()\n    // const imageUrl = profile.getImageUrl()\n    // const token_id = auth.currentUser.get().wc.id_token\n    // const id = profile.getId()\n    // const googleUser = {\n    //     fullName: fullName,\n    //     email: email,\n    //     id: id,\n    //     imageUrl: imageUrl,\n    //     token_id: token_id\n    // }  \n    // return googleUser\n    // }\n    const initializeGooglesignIn = () => {\n      window.gapi.load('client:auth2', () => {\n        window.gapi.client.init({\n          client_id: '915460618193-dcl1a1f3en6f3h22evu9jqk2aqdh1lcj.apps.googleusercontent.com',\n          scope:'profile'\n        }).then(()=> {\n        console.log('gapi initialized...')\n        auth = window.gapi.auth2.getAuthInstance()\n        const isSignedIn = auth.isSignedIn.get()\n        setIsSignedIn(isSignedIn)\n        googleTest(auth)\n        console.log(isSignedIn)\n        auth.isSignedIn.listen(isSignedIn => {\n            googleTest(isSignedIn, auth)\n        })\n        window.gapi.load('signin2', () => {\n          const params = {\n              onsuccess: () => {\n                  googleTest(auth)\n                  console.log('user has finished signing in...')\n              },\n              'theme': 'dark'\n          }\n          window.gapi.signin2.render('loginButton', params )\n        })\n        \n        })\n    })\n    \n}\n\n\n    if (isSignedIn === null){\n      return(\n        <h1>Checking if you are signed in...</h1>\n      )\n    }\n\n    return (\n        <>\n        <div className=\"googleAuthContainer\">\n            <div\n            id=\"loginButton\"\n            >Sign In with Google</div>\n        </div>    \n        \n        </>\n    )\n    \n    // return isSignedIn ? <h1>You are logged in</h1> : <h1>You are NOT logged in</h1>\n  \n}\n\nexport default GoogleAuth3"]},"metadata":{},"sourceType":"module"}