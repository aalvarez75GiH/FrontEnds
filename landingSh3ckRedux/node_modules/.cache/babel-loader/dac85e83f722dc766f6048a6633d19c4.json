{"ast":null,"code":"var _jsxFileName = \"/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik, Formik } from 'formik';\nimport * as yup from 'yup';\nimport DropDownList from './dropDownList';\nimport { infoContact } from '../../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n  email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico')\n});\n\nconst InterestedUserForm = ({\n  handlingSubmitInterestedUser,\n  language\n}) => {\n  _s();\n\n  const [city, setCity] = useState(language === 'ES' ? infoContact.intUsersFormPH3 : infoContact.intUsersFormPH3_EN);\n  const [cityError, setCityError] = useState(false);\n  const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo', 'Athens'];\n\n  const onSubmit = values => {\n    console.log(values);\n    const interestedUser = {\n      fullName: values.fullName,\n      email: values.email,\n      city: city\n    };\n    console.log(interestedUser);\n\n    if (interestedUser.city === 'Ciudad') {\n      setCityError(true);\n      console.log(interestedUser.city);\n    }\n\n    if (interestedUser.city !== 'Ciudad') {\n      handlingSubmitInterestedUser(interestedUser);\n    } // handlingSubmitInterestedUser(values)\n\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  }); // console.log(formik.values)\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxContainer\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"fullName\",\n          placeholder: language === 'ES' ? infoContact.intUsersFormPH1 : infoContact.intUsersFormPH1_EN,\n          type: \"text\",\n          value: formik.values.fullName,\n          onChange: formik.handleChange,\n          autoComplete: \"on\",\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"email\",\n          placeholder: language === 'ES' ? infoContact.intUsersFormPH2 : infoContact.intUsersFormPH2_EN,\n          type: \"email\",\n          autoComplete: \"on\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          style: {\n            borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n          options: options,\n          city: city,\n          setCity: setCity,\n          cityError: cityError,\n          setCityError: setCityError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sendDataBtn\",\n          type: \"submit\",\n          children: language === 'ES' ? infoContact.intUsersFormBtnLabel : infoContact.intUsersFormBtnLabel_EN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterestedUserForm, \"WiBwe9KS5LqSdEgsJLbHi/AZzAs=\", false, function () {\n  return [useFormik];\n});\n\n_c = InterestedUserForm;\nexport default InterestedUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterestedUserForm\");","map":{"version":3,"sources":["/Users/p3rolix/code/landingSh3ckFE/src/components/contactSection/interestedUserForm.js"],"names":["React","useState","useFormik","Formik","yup","DropDownList","infoContact","validationSchema","object","fullName","string","min","max","required","email","InterestedUserForm","handlingSubmitInterestedUser","language","city","setCity","intUsersFormPH3","intUsersFormPH3_EN","cityError","setCityError","options","onSubmit","values","console","log","interestedUser","formik","initialValues","validateOnBlur","errors","handleSubmit","intUsersFormPH1","intUsersFormPH1_EN","handleChange","handleBlur","borderBottom","touched","intUsersFormPH2","intUsersFormPH2_EN","intUsersFormBtnLabel","intUsersFormBtnLabel_EN"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useFormik, Formik } from 'formik'\nimport * as yup from 'yup'\nimport DropDownList from './dropDownList'\nimport { infoContact } from '../../utils/data'\n\n\nconst validationSchema = yup.object({\n    fullName: yup.string().min(3).max(100).required('hola, no te olvides de colocar tu nombre completo'),\n    email: yup.string().email('Por favor introduce una dirección de correo válida').required('No te olvides de colocar tu correo electrónico'),   \n})\n\n\nconst InterestedUserForm = ({ handlingSubmitInterestedUser, language }) => {\n\n    const [ city, setCity ] = useState(language === 'ES' ? infoContact.intUsersFormPH3 : infoContact.intUsersFormPH3_EN)\n    const [ cityError, setCityError ] = useState(false)\n    const options = ['Caracas', 'Barquisimeto', 'Valencia', 'Maracaibo', 'Athens']\n    \n\n\n    const onSubmit = (values) => {\n        console.log(values)\n        const interestedUser = {\n            fullName: values.fullName,\n            email: values.email,\n            city: city\n        }\n        console.log(interestedUser)\n        if (interestedUser.city === 'Ciudad'){\n            setCityError(true)\n            console.log(interestedUser.city)\n        }\n        if (interestedUser.city !== 'Ciudad'){\n            handlingSubmitInterestedUser(interestedUser)\n        }\n        \n        // handlingSubmitInterestedUser(values)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: \"\",\n            email: \"\"\n        },\n        validateOnBlur: true,\n        onSubmit,\n        validationSchema: validationSchema\n\n    })\n\n    // console.log(formik.values)\n    console.log(formik.errors)\n    \n    return (\n        <div className=\"boxContainer\">\n            <Formik>\n            <form \n            onSubmit={formik.handleSubmit}\n            className=\"formContainer\">\n                <input\n                className=\"input\"\n                name=\"fullName\"\n                placeholder={language === 'ES' ? infoContact.intUsersFormPH1 : infoContact.intUsersFormPH1_EN}\n                type=\"text\" \n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                autoComplete=\"on\"\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.fullName && formik.errors.fullName ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <input\n                className=\"input\"\n                name=\"email\"\n                placeholder={language === 'ES' ? infoContact.intUsersFormPH2 : infoContact.intUsersFormPH2_EN}\n                type=\"email\" \n                autoComplete=\"on\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                style={{\n                    borderBottom: `${formik.touched.email && formik.errors.email ? '2px solid red' : '1px solid rgba(200,200,200, 0.3 )'}`\n                }}\n                />\n                <DropDownList\n                options={options}\n                city={city}\n                setCity={setCity}\n                cityError={cityError}\n                setCityError={setCityError}\n                />\n                <button\n                className=\"sendDataBtn\"\n                type=\"submit\"\n                >{language === 'ES' ? infoContact.intUsersFormBtnLabel : infoContact.intUsersFormBtnLabel_EN}</button>\n            </form>\n            </Formik>\n            \n\n        </div>\n    )\n}\n\nexport default InterestedUserForm\n"]},"metadata":{},"sourceType":"module"}